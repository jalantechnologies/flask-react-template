name: Build & Test (Production)

on:
  push:
    branches:
      - main

jobs:
  production_build:
    name: Build (Production)
    uses: jalantechnologies/github-ci/.github/workflows/ci.yml@v2.5
    concurrency:
      group: ci-production-build-${{ github.event.ref }}
      cancel-in-progress: true
    with:
      app_name: frm-boilerplate
      app_env: production
      app_hostname: frm-boilerplate.platform.jalantechnologies.com
      branch: ${{ github.event.ref }}
      checks: "['npm:coverage', 'npm:lint']"
      docker_registry: ${{ vars.DOCKER_REGISTRY }}
      docker_username: ${{ vars.DOCKER_USERNAME }}
      sonar_host_url: ${{ vars.SONAR_HOST_URL }}
      do_cluster_id: ${{ vars.DO_CLUSTER_ID }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      doppler_token: ${{ secrets.DOPPLER_PRODUCTION_TOKEN }}
      do_access_token: ${{ secrets.DO_ACCESS_TOKEN }}
      sonar_token: ${{ secrets.SONAR_TOKEN }}

  production_test:
    name: compose:test (Production)
    uses: jalantechnologies/github-ci/.github/workflows/ci.yml@v2.5
    concurrency:
      group: ci-production-test-${{ github.event.ref }}
      cancel-in-progress: true
    with:
      app_name: frm-boilerplate
      app_env: production
      app_hostname: frm-boilerplate.platform.jalantechnologies.com
      branch: ${{ github.event.ref }}
      checks: "['compose:test']"
      docker_registry: ${{ vars.DOCKER_REGISTRY }}
      docker_username: ${{ vars.DOCKER_USERNAME }}
      sonar_host_url: ${{ vars.SONAR_HOST_URL }}
      do_cluster_id: ${{ vars.DO_CLUSTER_ID }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      doppler_token: ${{ secrets.DOPPLER_PRODUCTION_TOKEN }}
      do_access_token: ${{ secrets.DO_ACCESS_TOKEN }}
      sonar_token: ${{ secrets.SONAR_TOKEN }}
